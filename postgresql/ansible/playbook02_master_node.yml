---
  - name: Master node setup
    hosts: psql1
    become: yes
    become_method: sudo
    gather_facts: yes
    tags: [master]
    vars:
      - db_name: equator_dev
      - db_username: eq_db
      - db_password: 'P@ss99W0rd'
      - pg_data_dir: /data/equator  # Not use yet. Need look in to this if datastorage is mount in different place
      - replica_username: 'pgreplica'
      - replica_password: 'P@ss99W0rd_replica'
      # Caculated using https://pgtune.leopard.in.ua
      - max_connections: 200
      - shared_buffers: 256MB
      - effective_cache_size: 768MB
      - maintenance_work_mem: 64MB
      - checkpoint_completion_target: 0.7
      - wal_buffers: 7864kB
      - default_statistics_target: 100
      - random_page_cost: 1.1
      - effective_io_concurrency: 200
      - work_mem: 2621kB
      - min_wal_size: 1GB
      - max_wal_size: 2GB
      - max_worker_processes: 2
      - max_parallel_workers_per_gather: 1
      - max_parallel_workers: 2
      - wal_level: replica
      - max_wal_senders: 10
      - wal_keep_segments: 256
      - archive_mode: 'on'
      - archive_command: â€™/usr/pgsql-11/bin/syncwal.sh %p %f'
    tasks:
      - name: Create Equator database
        become: yes
        become_user: postgres
        postgresql_db:
          name: "{{ db_name }}"
          encoding: UTF-8
          lc_collate: en_US.UTF-8
          lc_ctype: en_US.UTF-8
          conn_limit: "{{ max_connections | int }}"
      - name: Set memory shared buffers parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: shared_buffers
          value: "{{ shared_buffers }}"
      - name: Set memory cache size parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: effective_cache_size
          value: "{{ effective_cache_size }}"
      - name: Set memory for maintenance work parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: effective_cache_size
          value: "{{ effective_cache_size }}"
      - name: Set checkpoint_completion_target parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: checkpoint_completion_target
          value: "{{ checkpoint_completion_target }}"
      - name: Set wal_buffers parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: wal_buffers
          value: "{{ wal_buffers }}"
      - name: Set default_statistics_target parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: default_statistics_target
          value: "{{ default_statistics_target | int }}"
      - name: Set random_page_cost parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: random_page_cost
          value: "{{ random_page_cost }}"
      - name: Set effective_io_concurrency parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: effective_io_concurrency
          value: "{{ effective_io_concurrency | int }}"
      - name: Set work_mem parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: work_mem
          value: "{{ work_mem }}"
      - name: Set min_wal_size parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: min_wal_size
          value: "{{ min_wal_size }}"
      - name: Set max_wal_size parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: max_wal_size
          value: "{{ max_wal_size }}"
      - name: Set max_worker_processes parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: max_worker_processes
          value: "{{ max_worker_processes | int }}"
      - name: Set max_parallel_workers_per_gather parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: max_parallel_workers_per_gather
          value: "{{ max_parallel_workers_per_gather | int }}"
      - name: Set max_parallel_workers parameter
        become: yes
        become_user: postgres
        postgresql_set:
          name: max_parallel_workers
          value: "{{ max_parallel_workers | int }}"
      # REPLICATION
      - name: Set WAL Level paramter for replica
        become: yes
        become_user: postgres
        postgresql_set:
          name: wal_level
          value: "{{ wal_level }}"
      - name: Set WAL sender max proc for replica
        become: yes
        become_user: postgres
        postgresql_set:
          name: max_wal_senders
          value: "{{ max_wal_senders | int }}"
      - name: Set WAL segments to be kept for replica
        become: yes
        become_user: postgres
        postgresql_set:
          name: wal_keep_segments
          value: "{{ wal_keep_segments | int }}"
      - name: Set archive mode for replica
        become: yes
        become_user: postgres
        postgresql_set:
          name: archive_mode
          value: "{{ archive_mode }}"
      - name: Create script to copy WAL files from primary to standby

      - name: Setup Replica node access in pg_hba
        become: yes
        become_user: postgres
        postgresql_pg_hba:
          dest: /var/lib/pgsql/11/data/pg_hba.conf
          address: "{{ hostvars['pgread'].['ansible_host'] }}/32"
          contype: host
          users: "{{ replica_username }}"
          databases: replication
          method: md5
      - name: Restart PostgreSQL service to take new configs
        systemd:
          name: postgresql-11
          state: restarted
      
